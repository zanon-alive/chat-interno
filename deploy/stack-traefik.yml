version: "3.8"

services:
  chat_frontend:
    image: docker.io/zanonalivesolucoes/chat-interno-frontend:latest
    networks:
      - app_network
      - traefik_public
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=true
        - traefik.swarm.network=traefik_public

        # Frontend (SPA) em HTTPS
        - traefik.http.routers.chat-frontend.rule=Host(`chat-interno.alivesolucoes.com.br`)
        - traefik.http.routers.chat-frontend.entrypoints=websecure
        - traefik.http.routers.chat-frontend.tls.certresolver=letsencrypt
        - traefik.http.services.chat-frontend.loadbalancer.server.port=80

  chat_backend:
    image: docker.io/zanonalivesolucoes/chat-interno-backend:latest
    environment:
      NODE_ENV: production
      HOST: 0.0.0.0
      PORT: 3000
      DB_DIALECT: sqlite
      DB_STORAGE: /app/data/database.sqlite
      LOG_LEVEL: info
      JWT_SECRET: troque_esta_chave
      JWT_EXPIRES_IN: 24h
      CORS_ORIGIN: https://chat-interno.alivesolucoes.com.br
    volumes:
      - chat_backend_data:/app/data
      - chat_backend_logs:/app/logs
    networks:
      - app_network
      - traefik_public
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=true
        - traefik.swarm.network=traefik_public

        # API (REST)
        - traefik.http.routers.chat-api.rule=Host(`chat-interno.alivesolucoes.com.br`) && PathPrefix(`/api`)
        - traefik.http.routers.chat-api.entrypoints=websecure
        - traefik.http.routers.chat-api.tls.certresolver=letsencrypt
        - traefik.http.services.chat-api.loadbalancer.server.port=3000

        # WebSocket (Socket.IO)
        - traefik.http.routers.chat-socket.rule=Host(`chat-interno.alivesolucoes.com.br`) && PathPrefix(`/socket.io`)
        - traefik.http.routers.chat-socket.entrypoints=websecure
        - traefik.http.routers.chat-socket.tls.certresolver=letsencrypt
        - traefik.http.routers.chat-socket.service=chat-api

networks:
  app_network:
    external: true
  traefik_public:
    external: true

volumes:
  chat_backend_data:
    driver: local
  chat_backend_logs:
    driver: local
